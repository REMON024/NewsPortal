// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsPortal.Context;

namespace NewsPortal.Context.Migrations
{
    [DbContext(typeof(NewsPortalContext))]
    [Migration("20201014165949_addroleSeedData")]
    partial class addroleSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NewsPortal.Common.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("NewsPortal.Common.Models.Comments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<int?>("FeedID");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("FeedID");

                    b.HasIndex("UserID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("NewsPortal.Common.Models.Feed", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID");

                    b.Property<int>("Description");

                    b.Property<int>("Status");

                    b.Property<string>("Title");

                    b.Property<int>("isHeadline");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Feeds");
                });

            modelBuilder.Entity("NewsPortal.Common.Models.Rating", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FeedID");

                    b.Property<float>("Point");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("FeedID");

                    b.HasIndex("UserID");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("NewsPortal.Common.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone_No");

                    b.Property<int?>("UserRollID");

                    b.Property<string>("Username");

                    b.Property<bool>("status");

                    b.HasKey("ID");

                    b.HasIndex("UserRollID");

                    b.ToTable("SystemUsers");
                });

            modelBuilder.Entity("NewsPortal.Common.Models.UserRoll", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("UserRolls");

                    b.HasData(
                        new
                        {
                            ID = 2,
                            Name = "Reader"
                        },
                        new
                        {
                            ID = 1,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("NewsPortal.Common.Models.Comments", b =>
                {
                    b.HasOne("NewsPortal.Common.Models.Feed", "Feed")
                        .WithMany("Comments")
                        .HasForeignKey("FeedID");

                    b.HasOne("NewsPortal.Common.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("NewsPortal.Common.Models.Feed", b =>
                {
                    b.HasOne("NewsPortal.Common.Models.Category", "Category")
                        .WithMany("Feeds")
                        .HasForeignKey("CategoryID");
                });

            modelBuilder.Entity("NewsPortal.Common.Models.Rating", b =>
                {
                    b.HasOne("NewsPortal.Common.Models.Feed", "Feed")
                        .WithMany("Ratings")
                        .HasForeignKey("FeedID");

                    b.HasOne("NewsPortal.Common.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("NewsPortal.Common.Models.User", b =>
                {
                    b.HasOne("NewsPortal.Common.Models.UserRoll", "UserRoll")
                        .WithMany("Users")
                        .HasForeignKey("UserRollID");
                });
#pragma warning restore 612, 618
        }
    }
}
